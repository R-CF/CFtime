% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CFtime.R
\name{indexOf}
\alias{indexOf}
\alias{indexOf,ANY,CFtime-method}
\title{Find the index of timestamps in the time series}
\usage{
indexOf(x, cf, method = "constant")

\S4method{indexOf}{ANY,CFtime}(x, cf, method = "constant")
}
\arguments{
\item{x}{Vector of character, POSIXt or Date values to find indexes for.}

\item{cf}{CFtime instance.}

\item{method}{Single value of "constant" or "linear". If \code{"constant"} or when
bounds are set on argument \code{cf}, return the index value for each match.
If \code{"linear"}, return the index value with any fractional value.}
}
\value{
A numeric vector giving indexes into the "time" dimension of the
data set associated with \code{cf} for the values of \code{x}.
}
\description{
In the CFtime instance \code{cf}, find the index in the time series for each
timestamp given in argument \code{x}.
}
\details{
Matching also returns index values for timestamps that fall between two
elements of the time series - this can lead to surprising results when time
series elements are positioned in the middle of an interval (as the CF
Metadata Conventions instruct us to "reasonably assume"): a time series of
days in January would be encoded in a NetCDF file as
\code{c("2024-01-01 12:00:00", "2024-01-02 12:00:00", "2024-01-03 12:00:00", ...)}
so \code{x <- c("2024-01-01", "2024-01-02", "2024-01-03")} would result in
\verb{(NA, 1, 2)} (or \verb{(NA, 1.5, 2.5)} with \code{method = "linear"}) because the date
values in \code{x} are at midnight. This situation is easily avoided by ensuring
that \code{cf} has bounds set (use \code{bounds(cf) <- TRUE} as a proximate solution
if bounds are not stored in the NetCDF file). See the Examples.

Values of \code{x} that are not valid timestamps according to the calendar of
\code{cf} will be returned as \code{NA}.

When bounds are set for \code{cf} these will be used to find indexes for the
values of \code{x}. When bounds are not contiguous, values of \code{x} that do not fall
within bounds are returned as \code{NA}.
}
\examples{
cf <- CFtime("days since 2020-01-01", "360_day", 1440:1799 + 0.5)
CFtimestamp(cf)[1:3]
x <- c("2024-01-01", "2024-01-02", "2024-01-03")
indexOf(x, cf)
indexOf(x, cf, method = "linear")

bounds(cf) <- TRUE
indexOf(x, cf)

# Non-existent calendar day in a `360_day` calendar
x <- c("2024-03-30", "2024-03-31", "2024-04-01")
indexOf(x, cf)
}
