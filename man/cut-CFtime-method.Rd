% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CFtime.R
\name{cut,CFtime-method}
\alias{cut,CFtime-method}
\title{Create a factor for a CFtime instance}
\usage{
\S4method{cut}{CFtime}(x, breaks, ...)
}
\arguments{
\item{x}{An instance of CFtime.}

\item{breaks}{A character string of a factor period, or a character vector of
timestamps that conform to the calendar of \code{x}, with a length of at least
2. Timestamps must be given in ISO8601 format, e.g. "2024-04-10 21:31:43".}

\item{...}{Ignored.}
}
\value{
A factor with the levels according to the 'breaks' argument.
}
\description{
Method for \code{\link[base:cut]{base::cut()}} applied to CFtime objects.
}
\details{
When \code{breaks} is one of \code{c("year", "season", "quarter", "month", "dekad", "day")}
a factor is generated like by \code{\link[=CFfactor]{CFfactor()}}.

When \code{breaks} is a vector of character timestamps a factor is produced with a
level for every interval between timestamps. The last timestamp, therefore,
is only used to close the interval stared by the pen-ultimate timestamp - use
a distant timestamp (e.g. "2301-01-01") to ensure that you get all offsets to
the end of the CFtime time series, if so desired. The earliest timestamp
cannot be smaller than the origin of the CFtime datum.

This method works similar to \code{\link[base:cut.POSIXt]{base::cut.POSIXt()}} but there are some
differences in the arguments: for \code{breaks} the set of options is different
and no preceding integer is allowed, \code{labels} are always assigned using
values of \code{breaks}, and the interval is always left-closed.
}
\examples{
x <- CFtime("days since 2021-01-01", "365_day", 0:729)
breaks <- c("2022-02-01", "2021-12-01", "2401-01-01")
cut(x, breaks)
}
\seealso{
\code{\link[=CFfactor]{CFfactor()}} produces a factor for several fixed periods, including
for epochs.
}
