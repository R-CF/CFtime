% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CFformat.R
\name{as_factor}
\alias{as_factor}
\title{Create a factor from the offsets in an CFts instance}
\usage{
as_factor(cfts, period = "month")
}
\arguments{
\item{cfts}{CFts. An atomic instance of the \code{CFts} class whose offsets will
be used to construct the factor.}

\item{period}{character. An atomic character string with one of the values
"year", "month" or "dekad".}
}
\value{
A factor with a length equal to the number of offsets in \code{cfts}.
}
\description{
With this function a factor can be generated for the time series contained in
the \code{CFts} instance. This is specifically interesting for creating factors
from the date part of the time series that aggregate the time series into
longer time periods (such as month) that can then be used to process daily CF
data sets using, for instance, \code{tapply()}. The factor will respect the
calendar of the datum that the time series is built on. For \code{period}s larger
than a day this will result in a factor where the calendar is no longer
relevant (because calendars impacts days, not weeks or months).
}
\details{
The factor will be generated in the order of the offsets of the \code{CFts}
instance. While typical CF-compliant data sources use ordered time series
there is, however, no guarantee that the factor is ordered as
multiple \code{CFts} objects may have been merged out of order.

The following periods are supported by this function:

\itemize{
\item \code{year}, the year of each offset is returned as "YYYY".
\item \code{month}, the year and month of each offset are returned as "YYYY-MM".
\item \code{dekad}, ten-day periods for each year and month are returned as
"YYYYDxx", where xx runs from "01" to "36". Each month is subdivided in
dekads as follows: 1- days 01 - 10; 2- days 11 - 20; 3- remainder of the
month.
}

Creating factors for other periods is not supported by this function. Factors
based on the timestamp information and not dependent on the calendar can
trivially be constructed from the output of the \code{as_timestamp()} function.
}
\examples{
datum <- CFdatum("days since 1949-12-01", "360_day")
cfts <- CFts(datum, 31:390)
f <- as_factor(cfts, "month")
}
